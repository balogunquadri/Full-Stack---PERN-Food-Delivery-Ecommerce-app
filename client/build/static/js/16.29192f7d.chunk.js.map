{"version":3,"sources":["components/MealList/MealList.js","containers/Orders/Orders.js"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_router_dom__WEBPACK_IMPORTED_MODULE_1__","_CatererMenus_CatererMenu_Menu_module_css__WEBPACK_IMPORTED_MODULE_2__","_CatererMenus_CatererMenu_Menu_module_css__WEBPACK_IMPORTED_MODULE_2___default","_Meal_Meal__WEBPACK_IMPORTED_MODULE_3__","mealList","props","meals","map","meal","a","createElement","Object","assign","key","id","sectionClasses","topBtn","bottomBtn","type","push","classes","Cart__container","className","Right__Btn__lg","onClick","checkout","join","saveMenu","to","toggleMealModal","role","Menu__food","Orders","handleOrderDelete","orderItemId","_this","onOrderDelete","handleOrderIncrement","onOrderIncrement","handleOrderDecrement","onOrderDecrement","showCheckoutModal","setState","checkingOut","hideCheckoutModal","this","onFetchOrders","nextProps","isEqual","orderMeals","orders","react__WEBPACK_IMPORTED_MODULE_5___default","_components_MealList_MealList__WEBPACK_IMPORTED_MODULE_11__","increaseQuantity","decreaseQuantity","deleteOrder","loading","_components_UI_Loading_Loading__WEBPACK_IMPORTED_MODULE_13__","length","_components_UI_Empty_Empty__WEBPACK_IMPORTED_MODULE_16__","text","Fragment","_components_Header_Header__WEBPACK_IMPORTED_MODULE_9__","bannerText","authenticated","overlay","_components_Footer_Footer__WEBPACK_IMPORTED_MODULE_10__","_components_UI_Modal_Modal__WEBPACK_IMPORTED_MODULE_12__","show","close","Component","connect","state","userOrderMeals","dispatch","actions","withHttpHandler","client"],"mappings":"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","file":"static/js/16.29192f7d.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport classes from '../CatererMenus/CatererMenu/Menu.module.css';\nimport Meal from './Meal/Meal';\n\nconst mealList = props => {\n  const roles = {\n    meals: 'meallist'\n  };\n  const meals = props.meals.map(meal => {\n    return <Meal key={meal.id} meal={meal} {...props} />;\n  });\n  const sectionClasses = ['page-section'];\n  let topBtn = null;\n  let bottomBtn = null;\n  switch (props.type) {\n    case 'orders':\n      sectionClasses.push(classes.Cart__container);\n      bottomBtn = (\n        <button className={classes.Right__Btn__lg} onClick={props.checkout}>\n          Make Order\n        </button>\n      );\n      break;\n    case 'manageMenu':\n      bottomBtn = (\n        <button className={['Btn', classes.Right__Btn__lg].join(' ')} onClick={props.saveMenu}>\n          Save\n        </button>\n      );\n      break;\n    case 'menuMeals':\n      topBtn = (\n        <Link to=\"/admin/menu\" className={['Btn', classes.Right__Btn__lg].join(' ')}>\n          Manage Menu\n        </Link>\n      );\n      break;\n    case 'mealOptions':\n      topBtn = (\n         <button\n          className={['Btn', classes.Right__Btn__lg].join(' ')}\n          onClick={props.toggleMealModal}\n        >\n          Add Meal Option\n        </button>\n      );\n      break;\n    default:\n      break;\n  }\n  return (\n    <section className={sectionClasses.join(' ')} role={roles.meals}>\n      {topBtn}\n      <div className={classes.Menu__food}>{meals}</div>\n      {bottomBtn}\n    </section>\n  );\n};\n\nexport default mealList;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { isEqual } from 'lodash';\nimport * as actions from '../../store/action/index';\nimport Header from '../../components/Header/Header';\nimport Footer from '../../components/Footer/Footer';\nimport MealList from '../../components/MealList/MealList';\nimport Modal from '../../components/UI/Modal/Modal';\nimport Loading from '../../components/UI/Loading/Loading';\nimport client from '../../shared/axios-client';\nimport withHttpHandler from '../../hoc/withHttpHandler/withHttpHandler';\nimport Empty from '../../components/UI/Empty/Empty';\n\nclass Orders extends Component {\n  componentDidMount() {\n    this.props.onFetchOrders();\n  }\n\n  shouldComponentUpdate(nextProps) {\n    return !isEqual(nextProps.orderMeals,this.props.orderMeals);\n  }\n\n  handleOrderDelete = orderItemId => {\n    this.props.onOrderDelete(orderItemId);\n  };\n\n  handleOrderIncrement = orderItemId => {\n    this.props.onOrderIncrement(orderItemId);\n  };\n\n  handleOrderDecrement = orderItemId => {\n    this.props.onOrderDecrement(orderItemId);\n  };\n\n  showCheckoutModal = () => {\n    this.setState({ checkingOut: true });\n  };\n\n  hideCheckoutModal = () => {\n    this.setState({ checkingOut: false });\n  };\n\n  render() {\n    let orders = (\n      <MealList\n        type=\"orders\"\n        meals={this.props.orderMeals}\n        increaseQuantity={this.handleOrderIncrement}\n        decreaseQuantity={this.handleOrderDecrement}\n        deleteOrder={this.handleOrderDelete}\n        checkout={this.showCheckoutModal}\n      />\n    );\n    if (this.props.loading) {\n      orders = <Loading />;\n    }\n    if (!this.props.loading && this.props.orderMeals.length === 0) {\n      orders = <Empty text=\"Orders\" />;\n    }\n    return (\n      <React.Fragment>\n        <Header bannerText=\"Your Order Summary\" authenticated overlay={this.props.checkingOut} />\n        <main>{orders}</main>\n        <Footer />\n        <Modal type=\"checkout\" show={this.props.checkingOut} close={this.hideCheckoutModal} />\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    orderMeals: state.orders.userOrderMeals,\n    checkingOut: state.orders.checkingOut,\n    loading: state.orders.loading\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onFetchOrders: () => dispatch(actions.orderFetchUserOrders()),\n    onOrderIncrement: orderItemId => dispatch(actions.orderIncrement(orderItemId)),\n    onOrderDecrement: orderItemId => dispatch(actions.orderDecrement(orderItemId)),\n    onOrderDelete: orderItemId => dispatch(actions.orderDelete(orderItemId))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withHttpHandler(Orders, client));\n"],"sourceRoot":""}