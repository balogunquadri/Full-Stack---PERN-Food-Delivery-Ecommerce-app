{"version":3,"sources":["components/MealList/MealList.js","containers/Caterer/CatererMealOptions/CatererMealOptions.js"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_router_dom__WEBPACK_IMPORTED_MODULE_1__","_CatererMenus_CatererMenu_Menu_module_css__WEBPACK_IMPORTED_MODULE_2__","_CatererMenus_CatererMenu_Menu_module_css__WEBPACK_IMPORTED_MODULE_2___default","_Meal_Meal__WEBPACK_IMPORTED_MODULE_3__","mealList","props","meals","map","meal","a","createElement","Object","assign","key","id","sectionClasses","topBtn","bottomBtn","type","push","classes","Cart__container","className","Right__Btn__lg","onClick","checkout","join","saveMenu","to","toggleMealModal","role","Menu__food","CatererMealOptions","state","mealToBeUpdated","editingMeal","redirect","redirectPath","handleAddToMeal","formData","_this","onAddMeal","resCode","onResetResCode","onToggleModal","setState","handleEditMeal","mealId","onUpdateMeal","deleteMealOption","onDeleteMeal","window","location","reload","showEditMealModal","this","onFetchMeals","react__WEBPACK_IMPORTED_MODULE_5___default","_components_MealList_MealList__WEBPACK_IMPORTED_MODULE_11__","removeMeal","loading","_components_UI_Loading_Loading__WEBPACK_IMPORTED_MODULE_12__","length","_components_UI_Empty_Empty__WEBPACK_IMPORTED_MODULE_14__","text","Fragment","react_router_dom__WEBPACK_IMPORTED_MODULE_7__","_components_Header_Header__WEBPACK_IMPORTED_MODULE_9__","bannerText","authenticated","catererAuthenticated","overlay","showModal","caterer","_components_UI_Modal_Modal__WEBPACK_IMPORTED_MODULE_13__","show","editMeal","edittingMeal","addMeal","close","_components_Footer_Footer__WEBPACK_IMPORTED_MODULE_10__","Component","connect","auth","showMealModal","global","lastReq","dispatch","actions","mealData","withHttpHandler","client"],"mappings":"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","file":"static/js/15.ca15ebe9.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport classes from '../CatererMenus/CatererMenu/Menu.module.css';\nimport Meal from './Meal/Meal';\n\nconst mealList = props => {\n  const roles = {\n    meals: 'meallist'\n  };\n  const meals = props.meals.map(meal => {\n    return <Meal key={meal.id} meal={meal} {...props} />;\n  });\n  const sectionClasses = ['page-section'];\n  let topBtn = null;\n  let bottomBtn = null;\n  switch (props.type) {\n    case 'orders':\n      sectionClasses.push(classes.Cart__container);\n      bottomBtn = (\n        <button className={classes.Right__Btn__lg} onClick={props.checkout}>\n          Make Order\n        </button>\n      );\n      break;\n    case 'manageMenu':\n      bottomBtn = (\n        <button className={['Btn', classes.Right__Btn__lg].join(' ')} onClick={props.saveMenu}>\n          Save\n        </button>\n      );\n      break;\n    case 'menuMeals':\n      topBtn = (\n        <Link to=\"/admin/menu\" className={['Btn', classes.Right__Btn__lg].join(' ')}>\n          Manage Menu\n        </Link>\n      );\n      break;\n    case 'mealOptions':\n      topBtn = (\n         <button\n          className={['Btn', classes.Right__Btn__lg].join(' ')}\n          onClick={props.toggleMealModal}\n        >\n          Add Meal Option\n        </button>\n      );\n      break;\n    default:\n      break;\n  }\n  return (\n    <section className={sectionClasses.join(' ')} role={roles.meals}>\n      {topBtn}\n      <div className={classes.Menu__food}>{meals}</div>\n      {bottomBtn}\n    </section>\n  );\n};\n\nexport default mealList;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport * as actions from '../../../store/action/index';\nimport Header from '../../../components/Header/Header';\nimport Footer from '../../../components/Footer/Footer';\nimport MealList from '../../../components/MealList/MealList';\nimport Loading from '../../../components/UI/Loading/Loading';\nimport Modal from '../../../components/UI/Modal/Modal';\nimport Empty from '../../../components/UI/Empty/Empty';\nimport client from '../../../shared/axios-client';\nimport withHttpHandler from '../../../hoc/withHttpHandler/withHttpHandler';\n\nclass CatererMealOptions extends Component {\n  state = {\n    mealToBeUpdated: null,\n    editingMeal: false,\n    redirect: false,\n    redirectPath: null\n  };\n\n  componentDidMount() {\n    this.props.onFetchMeals();\n  }\n\n  handleAddToMeal = formData => {\n    this.props.onAddMeal(formData);\n    if (this.props.resCode === 'success') {\n      this.props.onResetResCode();\n      this.props.onToggleModal();\n      this.setState({ redirect: true, redirectPath: '/admin/meals' });\n    }\n  };\n\n  handleEditMeal = (mealId, formData) => {\n    this.props.onUpdateMeal(mealId, formData);\n    if (this.props.resCode === 'success') {\n      this.props.onResetResCode();\n      this.props.onToggleModal();\n      this.setState({ redirect: true, redirectPath: '/admin/' });\n    }\n  };\n\n  deleteMealOption = mealId => {\n    this.props.onDeleteMeal(mealId);\n    window.location.reload();\n  };\n\n  showEditMealModal = meal => {\n    this.setState({ mealToBeUpdated: meal });\n    this.props.onToggleModal();\n  };\n\n  render() {\n    let meals = (\n      <MealList\n        type=\"mealOptions\"\n        meals={this.props.meals}\n        toggleMealModal={this.props.onToggleModal}\n        removeMeal={this.deleteMealOption}\n        showEditMealModal={this.showEditMealModal}\n      />\n    );\n    if (this.props.loading) {\n      meals = <Loading />;\n    }\n    if (!this.props.loading && this.props.meals.length === 0) {\n      meals = <Empty text=\"Meal Options\" />;\n    }\n    return (\n      <React.Fragment>\n        {this.state.redirect ? <Redirect to={this.state.redirectPath} /> : null}\n        <Header\n          bannerText=\"Your Meal Options\"\n          authenticated={this.props.catererAuthenticated}\n          overlay={this.props.showModal}\n          caterer\n        />\n        <main>{meals}</main>\n        <Modal\n          type=\"meal\"\n          show={this.props.showModal}\n          editMeal={this.handleEditMeal}\n          edittingMeal={this.state.mealToBeUpdated}\n          addMeal={this.handleAddToMeal}\n          close={this.props.onToggleModal}\n        />\n        <Footer />\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.meal.loading,\n    catererAuthenticated: state.auth.catererAuthenticated,\n    meals: state.meal.meals,\n    showModal: state.meal.showMealModal,\n    resCode: state.global.lastReq\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onFetchMeals: () => dispatch(actions.mealFetchMeals()),\n    onToggleModal: () => dispatch(actions.toggleMealModal()),\n    onAddMeal: formData => dispatch(actions.mealAddMeal(formData)),\n    onResetResCode: () => dispatch(actions.resetResCode()),\n    onDeleteMeal: mealId => dispatch(actions.mealDeleteMeal(mealId)),\n    onUpdateMeal: (mealId, mealData) => dispatch(actions.mealUpdateMeal(mealId, mealData))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withHttpHandler(CatererMealOptions, client));\n"],"sourceRoot":""}