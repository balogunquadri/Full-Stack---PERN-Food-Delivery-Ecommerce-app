{"version":3,"sources":["components/CatererMenus/CatererMenu/CatererMenu.js","components/CatererMenus/CatererMenus.js","containers/Menu/Menu.js"],"names":["catererMenu","props","meals","map","meal","react_default","a","createElement","Meal","key","id","order","handleQuantity","type","className","classes","Menu","join","Menu__label","catering_service","Menu__food","catererMenus","Object","toConsumableArray","catererData","CatererMenu","state","redirectPath","redirect","addMealToOrders","orderData","_this","onAddToOrders","console","log","orderResCode","resCode","onResetResCode","setState","this","onFetchMenus","mealList","CatererMenus","menus","onHandleQuantity","loading","Loading","length","Empty","text","Fragment","react_router","to","Header","bannerText","authenticated","userAuthenticated","overlay","beingOrdered","Modal","show","close","onHideQuantityModal","orderMeal","Footer","Component","connect","menu","forEach","push","catererId","caterer","JSON","parse","auth","token","global","lastReq","dispatch","mealId","actions","withHttpHandler","client"],"mappings":"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","file":"static/js/18.6f729ec2.chunk.js","sourcesContent":["import React from 'react';\nimport classes from './Menu.module.css';\nimport Meal from '../../MealList/Meal/Meal';\n\nconst catererMenu = props => {\n  const meals = props.meals.map(meal => {\n    return <Meal key={meal.id} meal={meal} order={props.handleQuantity} type=\"menu\" />;\n  });\n  return (\n    <section className={['page-section', classes.Menu].join(' ')}>\n      <div className={classes.Menu__label}>\n        <h3>{props.catering_service}</h3>\n      </div>\n      <div className={classes.Menu__food}>{meals}</div>\n    </section>\n  );\n};\n\nexport default catererMenu;\n","import React from 'react';\nimport CatererMenu from './CatererMenu/CatererMenu';\n\nconst catererMenus = props => {\n  const catererMenus = [...props.catererData];\n  const menus = catererMenus.map(catererMenu => {\n    return (\n      <CatererMenu\n        key={catererMenu.catering_service}\n        meals={catererMenu.meals}\n        catering_service={catererMenu.catering_service}\n        handleQuantity={props.handleQuantity}\n      />\n    );\n  });\n  return menus;\n};\n\nexport default catererMenus;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport Header from '../../components/Header/Header';\nimport Footer from '../../components/Footer/Footer';\nimport CatererMenus from '../../components/CatererMenus/CatererMenus';\nimport Modal from '../../components/UI/Modal/Modal';\nimport Loading from '../../components/UI/Loading/Loading';\nimport * as actions from '../../store/action/index';\nimport client from '../../shared/axios-client';\nimport withHttpHandler from '../../hoc/withHttpHandler/withHttpHandler';\nimport Empty from '../../components/UI/Empty/Empty';\n\nclass Menu extends Component {\n  state = {\n    redirectPath: null,\n    redirect: false\n  };\n\n  componentDidMount() {\n    this.props.onFetchMenus();\n  }\n\n  addMealToOrders = orderData => {\n    this.props.onAddToOrders(orderData);\n    console.log(this.props.orderResCode);\n    if (this.props.resCode === 'success') {\n      this.props.onResetResCode();\n      this.setState({ redirect: true, redirectPath: '/orders' });\n    }\n  };\n\n  render() {\n    let mealList = (\n      <CatererMenus catererData={this.props.menus} handleQuantity={this.props.onHandleQuantity} />\n    );\n    if (this.props.loading) {\n      mealList = <Loading />;\n    }\n    if (!this.props.loading && this.props.menus.length === 0) {\n      mealList = <Empty text=\"Menu\" />;\n    }\n    return (\n      <React.Fragment>\n        {this.state.redirect ? <Redirect to={this.state.redirectPath} /> : null}\n        <Header\n          bannerText=\"Today's Menus\"\n          authenticated={this.props.userAuthenticated}\n          overlay={this.props.beingOrdered}\n        />\n        <main>{mealList}</main>\n        <Modal\n          meal={this.props.beingOrdered}\n          type=\"quantity\"\n          show={this.props.beingOrdered !== null}\n          close={this.props.onHideQuantityModal}\n          orderMeal={this.addMealToOrders}\n        />\n        <Footer />\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  const menus = [];\n  state.menu.menus.forEach(menu => {\n    menus.push({\n      id: menu.id,\n      catererId: menu.catererId,\n      catering_service: menu.caterer.catering_service,\n      meals: JSON.parse(menu.meals)\n    });\n  });\n  return {\n    userAuthenticated: state.auth.userAuthenticated,\n    beingOrdered: state.menu.beingOrdered,\n    token: state.auth.token,\n    loading: state.menu.loading,\n    menus,\n    resCode: state.global.lastReq\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onHandleQuantity: mealId => dispatch(actions.handleQuantity(mealId)),\n    onHideQuantityModal: () => dispatch(actions.hideQuantityModal()),\n    onFetchMenus: () => dispatch(actions.menuFetchMenus()),\n    onAddToOrders: order => dispatch(actions.orderAddToOrders(order)),\n    onResetResCode: () => dispatch(actions.resetResCode())\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withHttpHandler(Menu, client));\n"],"sourceRoot":""}