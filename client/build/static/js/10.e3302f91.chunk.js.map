{"version":3,"sources":["components/Forms/Input/Input.js","components/Forms/FormWrapper/FormWrapper.js","components/Forms/FormHeadText/FormHeadText.js","containers/Caterer/CatererRegister/CatererRegister.js","components/Forms/Form.module.css"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_Form_module_css__WEBPACK_IMPORTED_MODULE_1__","_Form_module_css__WEBPACK_IMPORTED_MODULE_1___default","input","props","inputElement","inputClasses","classes","Form_field","invalid","shouldValidate","touched","push","Invalid","elementType","a","createElement","Object","assign","className","join","elementConfig","value","onChange","changed","options","map","option","key","displayValue","Form_group","formWrapper","Form_wrapper","Form_page","children","lodash__WEBPACK_IMPORTED_MODULE_1__","React","memo","user","charAt","toUpperCase","slice","type","prevProps","nextProps","isEqual","CatererRegister","state","controls","name","placeholder","validation","required","valid","email","isEmail","phone","isNumeric","catering_service","password","minLength","confirm_password","formIsValid","handleCatererRegister","e","preventDefault","formData","formElementId","_this","onCatererSignup","inputChangeHandler","inputId","formElement","updateObject","target","checkValidity","form","C_Users_USER_Desktop_postgres_caterer_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","setState","this","loading","onSetAuthRedirect","_this2","formElements","keys","id","config","authRedirect","catererAuthenticated","react__WEBPACK_IMPORTED_MODULE_6___default","react_router_dom__WEBPACK_IMPORTED_MODULE_7__","to","authRedirectPath","_components_Forms_FormWrapper_FormWrapper__WEBPACK_IMPORTED_MODULE_11__","action","method","Page_form","onSubmit","_components_Forms_FormHeadText_FormHeadText__WEBPACK_IMPORTED_MODULE_12__","_components_Forms_Input_Input__WEBPACK_IMPORTED_MODULE_14__","Page_link","react_router_dom__WEBPACK_IMPORTED_MODULE_8__","_components_UI_Loading_Loading__WEBPACK_IMPORTED_MODULE_13__","Fragment","Component","connect","auth","dispatch","actions","path","module","exports"],"mappings":"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","file":"static/js/10.e3302f91.chunk.js","sourcesContent":["import React from \"react\";\nimport classes from \"../Form.module.css\";\n\nconst input = props => {\n    let inputElement = null;\n    const inputClasses = [classes.Form_field];\n    if(props.invalid && props.shouldValidate && props.touched) {\n        inputClasses.push(classes.Invalid);\n    }\n\tswitch (props.elementType) {\n\t\tcase \"input\":\n\t\t\tinputElement = (\n\t\t\t\t<input\n\t\t\t\t\tclassName={inputClasses.join(' ')}\n\t\t\t\t\t{...props.elementConfig}\n\t\t\t\t\tvalue={props.value}\n\t\t\t\t\tonChange={props.changed}\n\t\t\t\t/>\n\t\t\t);\n\t\t\tbreak;\n\t\tcase \"textarea\":\n\t\t\tinputElement = (\n\t\t\t\t<textarea\n\t\t\t\t\tclassName={inputClasses.join(' ')}\n\t\t\t\t\t{...props.elementConfig}\n\t\t\t\t\tvalue={props.value}\n\t\t\t\t\tonChange={props.changed}\n\t\t\t\t/>\n\t\t\t);\n\t\t\tbreak;\n\t\tcase \"select\":\n\t\t\tinputElement = (\n\t\t\t\t<select className={inputClasses.join(' ')} onChange={props.changed}>\n\t\t\t\t\t{props.elementConfig.options.map(option => (\n\t\t\t\t\t\t<option key={option.value} value={option.value}>\n\t\t\t\t\t\t\t{option.displayValue}\n\t\t\t\t\t\t</option>\n\t\t\t\t\t))}\n\t\t\t\t</select>\n\t\t\t);\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tinputElement = (\n\t\t\t\t<input\n\t\t\t\t\tclassName={inputClasses.join(' ')}\n\t\t\t\t\t{...props.elementConfig}\n\t\t\t\t\tvalue={props.value}\n\t\t\t\t\tonChange={props.changed}\n\t\t\t\t/>\n\t\t\t);\n\t}\n\treturn (\n\t\t<div className={classes.Form_group}>\n\t\t\t{inputElement}\n\t\t</div>\n\t);\n};\n\n\nexport default input;\n","import React from 'react';\nimport classes from '../Form.module.css';\n\nconst formWrapper = (props) => (\n  <main className={classes.Form_wrapper}>\n    <section className={classes.Form_page}>\n      { props.children }\n    </section>\n  </main>\n);\n\nexport default formWrapper;","import React from 'react';\nimport { isEqual } from 'lodash';\n\nconst formHeadText = props => (\n  <h3>\n    <span className=\"Red\">F</span>oodie <span className=\"Red\"></span>\n    <span className=\"Red\"></span>\n    {props.user.charAt(0).toUpperCase() + props.user.slice(1)}{' '}\n    <span className=\"Red\">{props.type.charAt(0).toUpperCase() + props.type.slice(1)}</span>\n  </h3>\n);\n\nconst areEqual = (prevProps, nextProps) => {\n  return isEqual(prevProps, nextProps);\n};\n\nexport default React.memo(formHeadText, areEqual);\n","import React, { Component } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport classes from '../../../components/Forms/Form.module.css';\nimport FormWrapper from '../../../components/Forms/FormWrapper/FormWrapper';\nimport FormHeadText from '../../../components/Forms/FormHeadText/FormHeadText';\nimport Loading from '../../../components/UI/Loading/Loading';\nimport Input from '../../../components/Forms/Input/Input';\nimport { updateObject, checkValidity } from '../../../shared/utility';\nimport * as actions from '../../../store/action/index';\n\nclass CatererRegister extends Component {\n  state = {\n    controls: {\n      name: {\n        elementType: 'input',\n        elementConfig: {\n          type: 'text',\n          name: 'name',\n          placeholder: 'Your Name'\n        },\n        value: '',\n        validation: {\n          required: true\n        },\n        valid: false,\n        touched: false\n      },\n      email: {\n        elementType: 'input',\n        elementConfig: {\n          type: 'email',\n          name: 'email',\n          placeholder: 'Your Email'\n        },\n        value: '',\n        validation: {\n          required: true,\n          isEmail: true\n        },\n        valid: false,\n        touched: false\n      },\n      phone: {\n        elementType: 'input',\n        elementConfig: {\n          type: 'tel',\n          name: 'phone',\n          placeholder: 'Your Phone Number'\n        },\n        value: '',\n        validation: {\n          required: true,\n          isNumeric: true\n        },\n        valid: false,\n        touched: false\n      },\n      catering_service: {\n        elementType: 'input',\n        elementConfig: {\n          type: 'text',\n          name: 'catering_service',\n          placeholder: 'Catering Service Name'\n        },\n        value: '',\n        validation: {\n          required: true\n        },\n        valid: false,\n        touched: false\n      },\n      password: {\n        elementType: 'input',\n        elementConfig: {\n          type: 'password',\n          name: 'password',\n          placeholder: 'Password'\n        },\n        value: '',\n        validation: {\n          required: true,\n          minLength: 7\n        },\n        valid: false,\n        touched: false\n      },\n      confirm_password: {\n        elementType: 'input',\n        elementConfig: {\n          type: 'password',\n          name: 'confirm_password',\n          placeholder: 'Confirm Password'\n        },\n        value: '',\n        validation: {\n          required: true,\n          minLength: 7\n        },\n        valid: false,\n        touched: false\n      }\n    },\n    formIsValid: false\n  };\n\n  handleCatererRegister = e => {\n    e.preventDefault();\n    const formData = {};\n    for (let formElementId in this.state.controls) {\n      formData[formElementId] = this.state.controls[formElementId].value;\n    }\n    this.props.onCatererSignup(formData);\n  };\n\n  inputChangeHandler = (e, inputId) => {\n    const formElement = updateObject(this.state.controls[inputId], {\n      value: e.target.value,\n      valid: checkValidity(e.target.value, this.state.controls[inputId].validation),\n      touched: true\n    });\n\n    const form = updateObject(this.state.controls, {\n      [inputId]: formElement\n    });\n\n    let formIsValid = true;\n    for (let inputId in form) {\n      formIsValid = form[inputId].valid && formIsValid;\n    }\n\n    this.setState({ controls: form, formIsValid });\n  };\n\n  componentDidMount() {\n    if (!this.props.loading) {\n      this.props.onSetAuthRedirect('/admin/');\n    }\n  }\n\n  render() {\n    const formElements = Object.keys(this.state.controls).map(key => {\n      return {\n        id: key,\n        config: this.state.controls[key]\n      };\n    });\n    let authRedirect = null;\n\n    if (this.props.catererAuthenticated) {\n      authRedirect = <Redirect to={this.props.authRedirectPath} />;\n    }\n\n    let form = (\n      <FormWrapper>\n        <form\n          action=\"#\"\n          method=\"post\"\n          className={classes.Page_form}\n          id=\"catererRegisterForm\"\n          onSubmit={this.handleCatererRegister}\n        >\n          <FormHeadText user=\"caterer\" type=\"register\" />\n          {formElements.map(formElement => (\n            <Input\n              key={formElement.id}\n              elementType={formElement.config.elementType}\n              elementConfig={formElement.config.elementConfig}\n              value={formElement.config.value}\n              invalid={!formElement.config.valid}\n              touched={formElement.config.touched}\n              shouldValidate={formElement.config.validation}\n              changed={e => this.inputChangeHandler(e, formElement.id)}\n            />\n          ))}\n          <button type=\"submit\">Register</button>\n          <p className={classes.Page_link}>\n            Already Have an Account? <Link to=\"/admin/login\">Login</Link>\n          </p>\n          <p className={classes.Page_link}>\n            Back to Home? <Link to=\"/\">Click Here</Link>\n          </p>\n        </form>\n      </FormWrapper>\n    );\n    if (this.props.loading) {\n      form = <Loading />;\n    }\n    return (\n      <React.Fragment>\n        {authRedirect}\n        {form}\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.auth.loading,\n    catererAuthenticated: state.auth.catererAuthenticated\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onCatererSignup: formData => dispatch(actions.catererSignUp(formData)),\n    onSetAuthRedirect: path => dispatch(actions.setAuthRedirect(path))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(CatererRegister);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form_wrapper\":\"Form_Form_wrapper__akasy\",\"Form_page\":\"Form_Form_page__1yxdr\",\"Page_form\":\"Form_Page_form__NLBLl\",\"Form_group\":\"Form_Form_group__3Bm52\",\"Form_field\":\"Form_Form_field__2kD3T\",\"Invalid\":\"Form_Invalid__1eWLp\",\"Page_link\":\"Form_Page_link__oMrTD\"};"],"sourceRoot":""}